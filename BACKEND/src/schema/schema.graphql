# import Product from "./entities/product.graphql"
# import Cart from "./entities/cart.graphql"
# import WishList from "./entities/wishlist.graphql"

type Query{
  getProducts(
    limit: Int!
    offset: Int!
    orderBy: String
    search: String
    from: String
  ): OutputProducts
  getProductById(
    id: ID!
  ): Product
  getClient(id: ID!): Client
  getCartById(id: ID!): Cart
  getWishListById(id: ID!): WishList
  getLoggedUser: Client
  getWishListsByUser: [WishList]
}

type Mutation{
  createCart(
    input: CartInput
  ): Cart

  deleteProductToWishList(
    id: ID!
  ): DeleteElement

  deleteCart(
    id: ID!
  ): DeleteElement

  createWishList(
    name: String!
    priv: Boolean!
  ): WishList

  deleteWishList(
    id: ID!
  ): DeleteElement

  signIn(
    email: String!
    age: Int!
    password: String!
  ): Client

  logIn(
    email: String!
    password: String!
  ): String

  changePassword(
    newPassword: String!
    lastPassword: String!
  ) : Client

  deleteClient(id: ID!): ID

  editClient(
    age: Int
    email: String
  ) : Client

  editWishList(
    id: ID!
    priv: Boolean
    name: String
  ) : WishList

  addProductToWishList(
    product: ProductInput!
    idWishList: Int!
  ) : Product
}

input CartInput {
  products: [ProductInput!]
}

input ProductInput {
  id: String!
  name: String!
  price: Float!
  amount: Int!
  image: String
}

type DeleteElement {
  id: ID!
  response: String!
}

type OutputProducts {
  products: [Product!],
  hasNextPage: Boolean
}